#!/usr/bin/env python3
import os
import sys
import deromanize
import yaml

PROJECT_DIR = os.path.dirname(os.path.dirname(deromanize.__file__))
CONFIG_FILE = os.path.join(PROJECT_DIR, 'data', 'new.yml')
CUTOFF = 5

def main():
    profile = yaml.safe_load(open(CONFIG_FILE))
    key = deromanize.TransKey(profile)
    key.groups2key('base', 'consonants', 'vowels', 'other', 'clusters')
    key.groups2key('base', 'infrequent', weight=15)
    key.basekey2new('base', 'endings', 'final', endings=True)
    key.basekey2new('base', 'beginning', 'beginning')

    for word in sys.argv[1].lower().split():
        if word[0] in key.vowels:
            word = 'Ê¾' + word
        newword = ''
        for i, c in enumerate(word):
            if i == 0 or c != word[i-1]:
                newword += c
        end, remaider = key['endings'].getpart(newword)
        front, remaider = key['beginning'].getpart(remaider)
        middle = deromanize.add_reps(key['base'].getallparts(remaider))
        hebword = front + middle + end
        hebword.sort()
        print(word + ':  ', '\u200E, '.join(i.value for i in hebword[:CUTOFF]))


if __name__ == '__main__':
    main()
