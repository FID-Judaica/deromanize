#!/usr/bin/env python3
import sys, unicodedata, os
import yaml, deromanize

PROJECT_DIR = os.path.dirname(os.path.dirname(deromanize.__file__))
CONFIG_FILE = os.path.join(PROJECT_DIR, 'data', 'gk.yml')
CUTOFF = 5
PROFILE = yaml.safe_load(open(CONFIG_FILE))
key = deromanize.TransKey(PROFILE)

@key.processor
def decode(key, word):
    end, remainder = key['end'].getpart(word)
    try:
        front, remainder = key['front'].getpart(remainder)
    except KeyError:
        return end
    try:
        middle = key['base'].getallparts(remainder).add()
    except KeyError:
        return front + end
    return front + middle + end


def main():
    for word in sys.argv[1].split():
        gkword = decode(word)
        gkword.sort()
        print(word + ':  ', ', '.join(
            unicodedata.normalize('NFC', str(i)) for i in gkword[:CUTOFF]))


if __name__ == '__main__':
    main()
